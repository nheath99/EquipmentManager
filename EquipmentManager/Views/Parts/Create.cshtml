@model EquipmentManager.Models.CreatePartViewModel

@{
    ViewBag.Title = "Create";
}

@section scripts {
    <script type="text/javascript">
        $(function () {
            $('#addPartNumber').click(function () {

                var value = $('#addPartNumberName').val();
                var description = $('#addPartNumberDescription').val();

                if (value != null && value != "") {

                    var row = '<li><a class="glyphicon glyphicon-remove remove-row" /> ' + value + '<input type="hidden" value="' + value + '" name="PartNumberValues" /><input type="hidden" value="' + description + '" name="PartNumberDescriptions" /></li>'

                    $('#partNumberList').append(row);
                                        
                    $('#addPartNumberName').val('');
                    $('#addPartNumberDescription').val('');
                }
            });
            $('#partNumberList').on('click', 'a.remove-row', function () {
                $(this).closest('li').remove();
            });
        });
    </script>
}

<ol class="breadcrumb">
    <li>@Html.ActionLink("Home", "Index", "Home")</li>
    <li>@Html.ActionLink("Parts", "Index", "Parts")</li>
    <li class="active">Create</li>
</ol>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Item</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ItemsPerUnit, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ItemsPerUnit, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ItemsPerUnit, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SupplierId, "Supplier", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("SupplierId", null, "Select...", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SupplierId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ManufacturerId, "Manufacturer", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ManufacturerId", null, "Select...", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ManufacturerId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CategoryId, "Category", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CategoryId", null, "Select...", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Link, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Link, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Link, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PartNumberValues, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <ul id="partNumberList" class="list-unstyled"></ul>
                <input type="text" id="addPartNumberName" class="form-control text-box single-line" placeholder="Name" />
                <input type="text" id="addPartNumberDescription" class="form-control text-box single-line" placeholder="Description" />
                <a id="addPartNumber" class="btn btn-info">Add</a>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-primary" />
                <input type="submit" value="Create and Continue" name="Continue" class="btn btn-primary" />
                @Html.ActionLink("Cancel", "Index", null, new { @class = "btn btn-danger" })
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>